$date
	Wed Jun 19 00:07:21 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module iir_tb $end
$var wire 16 ! data_out [15:0] $end
$var reg 1 " clk $end
$var reg 8 # data_in [7:0] $end
$scope module dut $end
$var wire 24 $ a2b [23:0] $end
$var wire 16 % ab [15:0] $end
$var wire 1 " clk $end
$var wire 8 & data_in [7:0] $end
$var wire 16 ' data_out [15:0] $end
$var reg 16 ( res [15:0] $end
$var reg 16 ) temp_x0 [15:0] $end
$var reg 16 * temp_x1 [15:0] $end
$var reg 16 + temp_x2 [15:0] $end
$var reg 16 , temp_y0 [15:0] $end
$var reg 16 - temp_y1 [15:0] $end
$var reg 16 . temp_y2 [15:0] $end
$var reg 16 / x0 [15:0] $end
$var reg 16 0 x1 [15:0] $end
$var reg 16 1 x2 [15:0] $end
$var reg 16 2 y0 [15:0] $end
$var reg 16 3 y3 [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b11111001 &
b1111111111111100 %
b100 $
b11111001 #
0"
b0 !
$end
#5
b1111111111100100 /
b1111111111111001 )
1"
#10
0"
b11111010 #
b11111010 &
#15
b11100 0
b1111111111101000 /
b1111111111100100 !
b1111111111100100 '
b1111111111100100 2
b1111111111111001 *
b1111111111111010 )
1"
#20
0"
b11111011 #
b11111011 &
#25
b1111111111100100 1
b11000 0
b1111111111101100 /
b100 !
b100 '
b100 2
b1111111111100100 ,
b1111111111111001 +
b1111111111111010 *
b1111111111111011 )
1"
#30
0"
b11111100 #
b11111100 &
#35
b11100 3
b1111111111101000 1
b10100 0
b1111111111110000 /
b1111111111101000 !
b1111111111101000 '
b1111111111101000 2
b100 ,
b1111111111111010 +
b1111111111111011 *
b1111111111111100 )
1"
#40
0"
b11111101 #
b11111101 &
#45
b1111111111111100 3
b1111111111101100 1
b10000 0
b1111111111110100 /
b1000 !
b1000 '
b1000 2
b1111111111101000 ,
b1111111111111011 +
b1111111111111100 *
b1111111111111101 )
1"
#50
0"
b11111110 #
b11111110 &
#55
b11000 3
b1111111111110000 1
b1100 0
b1111111111111000 /
b1111111111101100 !
b1111111111101100 '
b1111111111101100 2
b1000 ,
b1111111111111100 +
b1111111111111101 *
b1111111111111110 )
1"
#60
0"
b11111111 #
b11111111 &
#65
b1111111111111000 3
b1111111111110100 1
b1000 0
b1111111111111100 /
b1100 !
b1100 '
b1100 2
b1111111111101100 ,
b1111111111111101 +
b1111111111111110 *
b1111111111111111 )
1"
#70
0"
b0 #
b0 &
#75
b10100 3
b1111111111111000 1
b100 0
b0 /
b1111111111110000 !
b1111111111110000 '
b1111111111110000 2
b1100 ,
b1111111111111110 +
b1111111111111111 *
b0 )
1"
#80
0"
b1 #
b1 &
#85
b1111111111110100 3
b1111111111111100 1
b0 0
b100 /
b10000 !
b10000 '
b10000 2
b1111111111110000 ,
b1111111111111111 +
b0 *
b1 )
1"
#90
0"
b10 #
b10 &
#95
b10000 3
b0 1
b1111111111111100 0
b1000 /
b1111111111110100 !
b1111111111110100 '
b1111111111110100 2
b10000 ,
b0 +
b1 *
b10 )
1"
#100
0"
b11 #
b11 &
#105
b1111111111110000 3
b100 1
b1111111111111000 0
b1100 /
b10100 !
b10100 '
b10100 2
b1111111111110100 ,
b1 +
b10 *
b11 )
1"
#110
0"
b100 #
b100 &
#115
b1100 3
b1000 1
b1111111111110100 0
b10000 /
b1111111111111000 !
b1111111111111000 '
b1111111111111000 2
b10100 ,
b10 +
b11 *
b100 )
1"
#120
0"
b101 #
b101 &
#125
b1111111111101100 3
b1100 1
b1111111111110000 0
b10100 /
b11000 !
b11000 '
b11000 2
b1111111111111000 ,
b11 +
b100 *
b101 )
1"
#130
0"
b110 #
b110 &
#135
b1000 3
b10000 1
b1111111111101100 0
b11000 /
b1111111111111100 !
b1111111111111100 '
b1111111111111100 2
b11000 ,
b100 +
b101 *
b110 )
1"
#140
0"
b111 #
b111 &
#145
b1111111111101000 3
b10100 1
b1111111111101000 0
b11100 /
b11100 !
b11100 '
b11100 2
b1111111111111100 ,
b101 +
b110 *
b111 )
1"
#150
0"
b0 #
b0 &
#155
b100 3
b11000 1
b1111111111100100 0
b0 /
b0 !
b0 '
b0 2
b11100 ,
b110 +
b111 *
b0 )
1"
#160
0"
#165
b1111111111100100 3
b11100 1
b0 0
b0 ,
b111 +
b0 *
1"
#170
0"
#175
b0 3
b0 1
b0 +
1"
#180
0"
#185
1"
#190
0"
#195
1"
#200
0"
#205
1"
#210
0"
#215
1"
#220
0"
#225
1"
#230
0"
#235
1"
#240
0"
#245
1"
#250
0"
